syntax = "proto3";

package wallet;

import "commons.proto";

message CreateWalletRequest {
  string userId = 1;
  string mnemonicPhraseId = 2;
  string networkType = 3;
}

message GetWalletRequest {
  optional string id = 1;
  optional string userId = 2;
}

message GetWalletResponse {
  string id = 1;
  string userId = 2;
  string address = 3;
  optional commons.NetworkInstance network = 6;
  string createdAt = 7;
  string updatedAt = 8;
}

message GetInternalMessageWalletResponse {
  string id = 1;
  string userId = 2;
  string address = 3;
  string publicKey = 4;
  string privateKey = 5;
}

message GetWalletsResponse {
  repeated GetWalletResponse data = 1;
  int32 count = 2;
  int32 skip = 3;
  int32 limit = 4;
}

message FilterWalletsRequest {
  optional string userId = 1;
  optional string networkId = 2;
  optional string address = 3;
  optional string networkType = 4;
}

message QueryWallets {
  optional string userId = 1;
  optional string networkId = 2;
  optional string address = 3;
  optional string networkType = 4;
  optional int32 skip = 6;
  optional int32 limit = 7;
}

service WalletsService {
  rpc CreateWallet(CreateWalletRequest) returns (GetWalletResponse);
  rpc GetWallet(GetWalletRequest) returns (GetWalletResponse);
  rpc GetWallets(QueryWallets) returns (GetWalletsResponse);
  rpc GetInternalMessageWallet(GetWalletRequest) returns (GetInternalMessageWalletResponse);
  rpc FilterWallets(FilterWalletsRequest) returns (GetWalletsResponse);
}