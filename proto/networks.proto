syntax = "proto3";

package networks;

import "commons.proto";

message CreateNetworkRequest {
  string name = 2;
  optional string description = 3;
  string symbol = 4;
}


message GetNetworksRequest {
  optional string name = 1;
  optional bool active = 2;
  optional int32 skip = 3;
  optional int32 limit = 4;
}

message GetNetworksResponse {
  repeated commons.NetworkInstance data = 1;
  int32 count = 2;
  int32 skip = 3;
  int32 limit = 4;
}

message GetNetworkRequest {
  string id = 1;
}

message CreateAssetNetworkRequest {
  string networkId = 1;
  string fullname = 2;
  string contractAddress = 3;
}

message DeleteAssetNetworkRequest {
  string networkId = 1;
  string contractAddress = 2;
}

message GetAssetNetworkDetailsRequest {
  string networkId = 1;
  string contractAddress = 2;
}

message SearchNetworkRequest {
  optional string id = 1;
  optional string name = 2;
  optional string symbol = 3;
}

service NetworksService {
  rpc GetNetworks(GetNetworksRequest) returns (GetNetworksResponse);
  rpc CreateNetwork(CreateNetworkRequest) returns (commons.NetworkInstance);
  rpc GetNetwork(GetNetworkRequest) returns (commons.NetworkInstance);
  rpc ActivateNetwork(GetNetworkRequest) returns (commons.NetworkInstance);
  rpc DeactivateNetwork(GetNetworkRequest) returns (commons.NetworkInstance);
  rpc CreateAssetNetwork(CreateAssetNetworkRequest) returns (commons.NetworkInstance);
  rpc DeleteAssetNetwork(DeleteAssetNetworkRequest) returns (commons.NetworkInstance);
  rpc GetAssetNetworkDetails(GetAssetNetworkDetailsRequest) returns (commons.NetworkAssetInstance);
  rpc SearchNetwork(SearchNetworkRequest) returns (commons.NetworkInstance);
}